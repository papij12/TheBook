// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TheBook.Data;

#nullable disable

namespace TheBook.Migrations
{
    [DbContext(typeof(TheBookContext))]
    [Migration("20220118094026_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("TheBook.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("TheBook.Models.Books", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("BookId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<string>("Auther")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("integer");

                    b.HasKey("BookId");

                    b.HasIndex("AdminId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("TheBook.Models.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ClientId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.HasIndex("AdminId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TheBook.Models.Books", b =>
                {
                    b.HasOne("TheBook.Models.Admin", null)
                        .WithMany("Books")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("TheBook.Models.Clients", b =>
                {
                    b.HasOne("TheBook.Models.Admin", null)
                        .WithMany("Clients")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("TheBook.Models.Admin", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
